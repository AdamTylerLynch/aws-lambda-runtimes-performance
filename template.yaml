AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Serverless Micronaut API

Resources:
  JavaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: java-graalvm-lambda/output/lambda-java-1.0-SNAPSHOT.jar
      Handler: com.filichkin.blog.lambda.v2.handler.BookHandler::handleRequest
      Runtime: java11
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 15
      Environment:
        Variables:
          TABLE_NAME: test

      Events:
        #        GetBook:
        #          Type: Api
        #          Properties:
        #            Path: /v2/book/{book_id}
        #            Method: get
        CreateBook:
          Type: Api
          Properties:
            Path: /java/book
            Method: post
  #        UpdateBook:
  #          Type: Api
  #          Properties:
  #            Path: /v2/book
  #            Method: put
  #        DeleteBook:
  #          Type: Api
  #          Properties:
  #            Path: /v2/book/{book_id}
  #            Method: delete

  GraalVMFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: not.used.in.provided.runtime
      Runtime: provided
      CodeUri: java-graalvm-lambda/output/dist/function.zip
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: test

      Events:
        #        GetBook:
        #          Type: Api
        #          Properties:
        #            Path: /graal/book/{book_id}
        #            Method: get
        CreateBook:
          Type: Api
          Properties:
            Path: /graal/book
            Method: post
  #        UpdateBook:
  #          Type: Api
  #          Properties:
  #            Path: /graal/book
  #            Method: put
  #        DeleteBook:
  #          Type: Api
  #          Properties:
  #            Path: /graal/book/{book_id}
  #            Method: delete

  RustFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: not.used.in.provided.runtime
      Runtime: provided
      CodeUri: rust-aws-lambda/output/function.zip
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: test

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /rust/book
            Method: post


  GoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: go1.x
      Handler: lambda-go
      CodeUri: go-lambda/output/
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: test

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /go/book
            Method: post
  #
  PythonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: python-lambda/
      Handler: lambda.create
      Runtime: python3.9
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 30

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /py/book
            Method: post

  NodeJsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: node-lambda/
      Handler: lambda.create
      Runtime: nodejs14.x
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /node/book
            Method: post

  DotNetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: dotnet-lambda/src/DotNetFunction/
      Handler: DotNetFunction::DotNetFunction.Function::FunctionHandler
      Runtime: dotnetcore3.1
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 30

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /dotnet/book
            Method: post

  RubyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ruby-lambda/
      Handler: app.create
      Runtime: ruby2.7
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /ruby/book
            Method: post

  BooksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: book
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST


Outputs:
  MyServiceApi:
    Description: URL for application
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/greet'
    Export:
      Name: MyServiceApiV2
